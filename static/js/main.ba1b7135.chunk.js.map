{"version":3,"sources":["components/Loader.js","components/DayWeather.js","components/CityCard.js","containers/WeatherPage.js","adapters/citiesAdapter.js","adapters/weatherAdapter.js","containers/WeatherContainer.js","components/App.js","index.js"],"names":["Loader","className","DayWeather","name","min","max","CityCard","city","display","country","weather","days","currentDay","Date","getDay","dayCards","push","temp","i","printDays","WeatherPage","handleSearchCity","loading","useState","cityText","setCityText","Fragment","onSubmit","e","preventDefault","required","autoFocus","onChange","target","value","type","placeholder","id","getCity","a","axios","response","data","getCityWeather","lat","long","WeatherContainer","setCity","setError","setLoading","formatText","toLowerCase","split","join","searchWeather","daily","useEffect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba1b7135.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader-container__spinner\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nconst DayWeather = ({name, min, max}) => {\r\n  return(\r\n    <div className=\"col-6 col-md-3 col-lg-2 px-0\">\r\n      <div className=\"day-container\">\r\n        <span className=\"day-container__name\">{name}</span>\r\n        <span>{min}°/ {max}°</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DayWeather;","import React from 'react';\r\nimport DayWeather from './DayWeather';\r\n\r\nconst CityCard = ({city}) => {\r\n  \r\n  const {display, country, weather} = city;\r\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Frid\", \"Sat\"];\r\n\r\n  const printDays = () => {\r\n    let currentDay = (new Date()).getDay();\r\n    let dayCards = [];\r\n\r\n    dayCards.push(\r\n      <DayWeather\r\n        key={currentDay}\r\n        name={\"Today\"}\r\n        min={weather[currentDay].temp.min}\r\n        max={weather[currentDay].temp.max}\r\n      />\r\n    );\r\n    currentDay++;\r\n\r\n    for(var i = 0; i < 6; i++) {\r\n      if(currentDay > 6) \r\n      currentDay = 0;\r\n      dayCards.push(\r\n        <DayWeather\r\n          key={currentDay}\r\n          name={days[currentDay]}\r\n          min={weather[currentDay].temp.min}\r\n          max={weather[currentDay].temp.max}\r\n        />\r\n      );\r\n      currentDay++;\r\n    }\r\n\r\n    return dayCards;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"city-card\">\r\n      <span className=\"city-card__name\">\r\n        {display}, {country}\r\n      </span>\r\n      <div className=\"city-card__days-container container-fluid\">\r\n        <div className=\"row\">\r\n          {printDays()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default CityCard;\r\n","import React, {useState} from 'react';\r\nimport Loader from '../components/Loader.js';\r\nimport CityCard from '../components/CityCard.js';\r\n\r\nconst WeatherPage = ({handleSearchCity, city, loading}) => {\r\n  const [cityText, setCityText] = useState(\"\");\r\n  \r\n  const handleOnChange = (e) => {\r\n    setCityText(e.target.value);\r\n  }\r\n\r\n  const handleOnClick = (e) => {\r\n    e.preventDefault();\r\n    handleSearchCity(cityText);\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 my-5\">\r\n          <div className=\"d-flex flex-wrap w-100\">\r\n            <h3 className=\"h3 me-5\">Weather searcher</h3>\r\n            <form onSubmit={handleOnClick} className=\"d-flex align-items-center form-search\">\r\n              <input\r\n                required\r\n                autoFocus\r\n                onChange={handleOnChange}\r\n                value={cityText}\r\n                type=\"text\" placeholder=\"Type the city name here...\" className=\"form-control input-search\" />\r\n                <span className=\"search-location-icon fas fa-map-marker-alt\"></span>\r\n              <button className=\"btn btn-primary ms-2\">Search</button>\r\n            </form>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 city-container\">\r\n            {(city && (loading == false)) && <CityCard key={city.id} city={city} />}\r\n            {loading && <Loader/>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default WeatherPage;","import axios from \"axios\";\r\n\r\nexport const getCity = async (cityText) => {\r\n  try {\r\n    const response = await axios(`https://search.reservamos.mx/api/v2/places?q=${cityText}`);\r\n    return response.data[0];\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}","import axios from \"axios\";\r\n\r\nexport const getCityWeather = async (lat, long) => {\r\n  try {\r\n    const response = await axios(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&units=metric&exclude=current,minutely,hourly,alerts&appid=a5a47c18197737e8eeca634cd6acb581`);\r\n    return response.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport WeatherPage from './WeatherPage.js';\r\nimport axios from 'axios';\r\nimport { getCity } from '../adapters/citiesAdapter.js';\r\nimport { getCityWeather } from '../adapters/weatherAdapter.js';\r\n\r\nconst WeatherContainer = () => {\r\n  const [city, setCity] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const formatText = (cityText) => {\r\n    return cityText.toLowerCase().split(\" \").join(\"-\");\r\n  }\r\n\r\n  const handleSearchCity = async (cityText) => {\r\n    setLoading(true);\r\n    try {\r\n      let city = await getCity(formatText(cityText));\r\n      city[\"weather\"] = await searchWeather(city.lat, city.long);\r\n      setCity(city);\r\n      setError(null);\r\n      setLoading(false);\r\n    } catch(error) {\r\n      setError(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const searchWeather = async (lat, long) => {\r\n    try {\r\n      const response = await getCityWeather(lat, long);\r\n      return response.daily;\r\n    } catch (error) {\r\n      setError(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <WeatherPage\r\n      handleSearchCity={handleSearchCity}\r\n      city={city}\r\n      loading={loading}\r\n    />\r\n  )\r\n}\r\n\r\nexport default WeatherContainer;\r\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport '../assets/styles/app.css';\n\nimport WeatherContainer from '../containers/WeatherContainer.js';\n\nfunction App() {\n  return (\n    <WeatherContainer/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}