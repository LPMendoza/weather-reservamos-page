{"version":3,"sources":["components/Loader.js","components/DayWeather.js","components/CityCard.js","containers/WeatherPage.js","adapters/citiesAdapter.js","adapters/weatherAdapter.js","containers/WeatherContainer.js","components/App.js","index.js"],"names":["Loader","className","DayWeather","name","min","max","rainMax","CityCard","city","display","country","weather","days","getMaxRain","indexMax","aux","forEach","day","index","humidity","currentDay","Date","getDay","dayCards","maxRainIndex","console","log","push","temp","i","printDays","WeatherPage","handleSearchCity","loading","useState","cityText","setCityText","cityId","setCityId","Fragment","onSubmit","e","preventDefault","required","autoFocus","onChange","target","value","type","placeholder","id","getCity","a","axios","response","data","getCityWeather","lat","long","WeatherContainer","setCity","setError","setLoading","formatText","toLowerCase","split","join","searchWeather","daily","useEffect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c381c575.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader-container__spinner\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nconst DayWeather = ({name, min, max, rainMax}) => {\r\n  return(\r\n    <div className={`col-6 col-md-3 col-lg-2 px-0 `}>\r\n      <div className={`day-container ${rainMax && \"rainMax\"}`}>\r\n        <span className=\"day-container__name\">{name}</span>\r\n        <span>{min}°/ {max}°</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DayWeather;","import React from 'react';\r\nimport DayWeather from './DayWeather';\r\n\r\nconst CityCard = ({city}) => {\r\n  \r\n  const {display, country, weather} = city;\r\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Frid\", \"Sat\"];\r\n\r\n  const printDays = () => {\r\n    let currentDay = (new Date()).getDay();\r\n    let dayCards = [];\r\n    const maxRainIndex = getMaxRain(weather);\r\n    console.log(maxRainIndex);\r\n    dayCards.push(\r\n      <DayWeather\r\n        key={0}\r\n        name={\"Today\"}\r\n        min={weather[0].temp.min}\r\n        max={weather[0].temp.max}\r\n        rainMax={0 === maxRainIndex}\r\n      />\r\n    );\r\n    currentDay++;\r\n\r\n    for(var i = 1; i <= 7; i++) {\r\n      if(currentDay > 6) \r\n      currentDay = 0;\r\n      dayCards.push(\r\n        <DayWeather\r\n          key={i}\r\n          name={days[currentDay]}\r\n          min={weather[i].temp.min}\r\n          max={weather[i].temp.max}\r\n          rainMax={i === maxRainIndex}\r\n        />\r\n      );\r\n      currentDay++;\r\n    }\r\n\r\n    return dayCards;\r\n  }\r\n\r\n  const getMaxRain = (weather) => {\r\n    let indexMax = 0;\r\n    let aux = 0; \r\n    weather.forEach((day, index) => {\r\n      if(day.humidity > aux) {\r\n        indexMax = index;\r\n        aux = day.humidity;\r\n      }\r\n    });\r\n    return indexMax;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"city-card\">\r\n      <span className=\"city-card__name\">\r\n        {display}, {country}\r\n      </span>\r\n      <div className=\"city-card__days-container container-fluid\">\r\n        <div className=\"row\">\r\n          {printDays()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default CityCard;\r\n","import React, {useState} from 'react';\r\nimport Loader from '../components/Loader.js';\r\nimport CityCard from '../components/CityCard.js';\r\n\r\nconst WeatherPage = ({handleSearchCity, city, loading}) => {\r\n  const [cityText, setCityText] = useState(\"\");\r\n  const [cityId, setCityId] = useState(\"\");\r\n  \r\n  const handleOnChange = (e) => {\r\n    setCityText(e.target.value);\r\n  }\r\n  const handleOnChangeId = (e) => {\r\n    setCityId(e.target.value);\r\n  }\r\n\r\n  const handleOnClick = (e) => {\r\n    e.preventDefault();\r\n    handleSearchCity(cityText, cityId);\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 my-5\">\r\n          <div className=\"d-flex flex-wrap w-100\">\r\n            <h3 className=\"h3 me-5\">Weather searcher</h3>\r\n            <form onSubmit={handleOnClick} className=\"d-flex align-items-center form-search\">\r\n              <input\r\n                required\r\n                autoFocus\r\n                onChange={handleOnChange}\r\n                value={cityText}\r\n                type=\"text\" placeholder=\"Type the city name here...\" className=\"form-control input-search\" />\r\n                <span className=\"search-location-icon fas fa-map-marker-alt\"></span>\r\n              <input\r\n                required\r\n                autoFocus\r\n                onChange={handleOnChangeId}\r\n                value={cityId}\r\n                type=\"text\" placeholder=\"\" className=\"ms-2 form-control input-search\" />\r\n                <span className=\"search-location-icon fas fa-map-marker-alt\"></span>\r\n              <button className=\"btn btn-primary ms-2\">Search</button>\r\n            </form>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 city-container\">\r\n            {(city && (loading == false)) && <CityCard key={city.id} city={city} />}\r\n            {loading && <Loader/>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default WeatherPage;","import axios from \"axios\";\r\n\r\nexport const getCity = async (cityText, id) => {\r\n  try {\r\n    const response = await axios(`https://search.reservamos.mx/api/v2/places?q=${cityText}&from=${id}`);\r\n    return response.data[0];\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}","import axios from \"axios\";\r\n\r\nexport const getCityWeather = async (lat, long) => {\r\n  try {\r\n    const response = await axios(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&units=metric&exclude=current,minutely,hourly,alerts&appid=a5a47c18197737e8eeca634cd6acb581`);\r\n    console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport WeatherPage from './WeatherPage.js';\r\nimport axios from 'axios';\r\nimport { getCity } from '../adapters/citiesAdapter.js';\r\nimport { getCityWeather } from '../adapters/weatherAdapter.js';\r\n\r\nconst WeatherContainer = () => {\r\n  const [city, setCity] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const formatText = (cityText) => {\r\n    return cityText.toLowerCase().split(\" \").join(\"-\");\r\n  }\r\n\r\n  const handleSearchCity = async (cityText, cityId) => {\r\n    setLoading(true);\r\n    try {\r\n      let city = await getCity(formatText(cityText), cityId);\r\n      city[\"weather\"] = await searchWeather(city.lat, city.long);\r\n      setCity(city);\r\n      setError(null);\r\n      setLoading(false);\r\n    } catch(error) {\r\n      setError(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const searchWeather = async (lat, long) => {\r\n    try {\r\n      const response = await getCityWeather(lat, long);\r\n      return response.daily;\r\n    } catch (error) {\r\n      setError(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <WeatherPage\r\n      handleSearchCity={handleSearchCity}\r\n      city={city}\r\n      loading={loading}\r\n    />\r\n  )\r\n}\r\n\r\nexport default WeatherContainer;\r\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport '../assets/styles/app.css';\n\nimport WeatherContainer from '../containers/WeatherContainer.js';\n\nfunction App() {\n  return (\n    <WeatherContainer/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}